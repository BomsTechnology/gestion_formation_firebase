import{j as r,V as R,u as A,q as d,s as I,v,x as g,y as C,z as T,A as U,B as k,I as j,D as w,C as E,E as D,G as F}from"./index.c77e1f43.js";import{_ as S}from"./ConfirmDeleteModal.204134a5.js";function L(){A();const s=r(""),p=R(d,"categories"),n=r(0),l=r([]),f=r([]),c=r([]),o=r([]),y=r(!1),b=async e=>{const a=v(g,e);let t;return await F(a).then(i=>{t=i}).catch(i=>{switch(i.code){case"storage/object-not-found":s.value="File doesn't exist";break;case"storage/unauthorized":s.value="User doesn't have permission to access the object";break;case"storage/canceled":s.value="ser canceled the upload";break;case"storage/unknown":s.value="Unknown error occurred, inspect the server response";break;default:s.value="errors to get image";break}}),t},m=async()=>{n.value=1,f.value=[],o.value=[],(await I(p).catch(a=>{s.value=a.message})).forEach(a=>{let t=a.data();t.id=a.id,f.value.push(t),o.value.push({id:t.id,image:t.image,value:!1})}),h(!1),n.value=0},_=async e=>{n.value=1,s.value="",e.image=new File([e.image],`${new Date().getTime()}_${e.image.name}`);const a=v(g,`categories_icon/${e.image.name}`);await C(a,e.image).then(t=>{console.log("Uploaded a blob or file!")}),await b(`categories_icon/${e.image.name}`).then(t=>{e.url=t}),await T(p,{name:e.name,image:e.url,nbTraining:0}).catch(t=>{s.value=t.message,n.value=0}),m(),h(!1),n.value=0},$=async e=>{o.value[e].value?c.value.push({id:o.value[e].id,image:o.value[e].image}):c.value.splice(e,1)},h=async(e=!0)=>{if(e)if(y.value)for(const a in o.value)o.value[a].value=!0,c.value.push(o.value[a].id);else{for(const a in o.value)o.value[a].value=!1;c.value=[]}else{for(const a in o.value)o.value[a].value=!1;c.value=[]}};return{updateCategory:async e=>{n.value=1,s.value="";const a=w(d,"categories",e);if(l.value.newImage){const t=v(g,l.value.image);await k(t).then(()=>{console.log("Deleted old file!")}).catch(u=>{s.value=u.message}),l.value.image=new File([l.value.newImage],`${new Date().getTime()}_${l.value.newImage.name}`);const i=v(g,`categories_icon/${l.value.image.name}`);await C(i,l.value.image).then(u=>{console.log("Uploaded a blob or file!")}),await b(`categories_icon/${l.value.image.name}`).then(u=>{l.value.url=u}),await D(a,{name:l.value.name,image:l.value.url}).catch(u=>{s.value=u.message})}else await D(a,{name:l.value.name}).catch(t=>{s.value=t.message});m(),n.value=0},getCategory:async e=>{n.value=1;const a=w(d,"categories",e),t=await E(a);t.exists()?l.value=t.data():s.value="No such document!",n.value=0},category:l,deleteCategory:async()=>{if(c.value.length!=0){const{reveal:e,onConfirm:a}=U(S,{question:"Are you sure you want to delete its item(s)? All data will be permanently deleted. This action cannot be undone."});a(async()=>{for(const t in c.value){const i=v(g,c.value[t].image);await k(i).then(()=>{console.log("Deleted file!")}).catch(u=>{s.value=u.message}),await j(w(d,"categories",c.value[t].id)).catch(u=>{s.value=u.message})}m()}),e()}},toogleDeleteArray:$,checkAll:h,getCategories:m,deleteArray:c,chks:o,chkAll:y,categories:f,loading:n,errors:s,createCategory:_,cleanErrors:()=>{s.value=""}}}export{L as u};
