import{j as r,V as I,u as U,q as h,s as _,v,x as m,y as T,z as j,A as x,B as k,I as C,D as g,C as E,E as $,G as F}from"./index.c77e1f43.js";import{_ as S}from"./ConfirmDeleteModal.204134a5.js";function N(){const f=U(),s=r(""),p=I(h,"teachers"),o=r(0),a=r([]),d=r([]),u=r([]),n=r([]),w=r(!1),y=async e=>{const t=v(m,e);let l;return await F(t).then(i=>{l=i}).catch(i=>{switch(i.code){case"storage/object-not-found":s.value="File doesn't exist";break;case"storage/unauthorized":s.value="User doesn't have permission to access the object";break;case"storage/canceled":s.value="ser canceled the upload";break;case"storage/unknown":s.value="Unknown error occurred, inspect the server response";break;default:s.value="errors to get image";break}}),l},b=async()=>{o.value=1,d.value=[],n.value=[],(await _(p).catch(t=>{s.value=t.message})).forEach(t=>{let l=t.data();l.id=t.id,d.value.push(l),n.value.push({id:l.id,image:l.image,value:!1})}),D(!1),o.value=0},R=async e=>{o.value=1,s.value="",e.image=new File([e.image],`${new Date().getTime()}_${e.image.name}`);const t=v(m,`teacher/${e.image.name}`);await T(t,e.image).then(l=>{console.log("Uploaded a blob or file!")}),await y(`teacher/${e.image.name}`).then(l=>{e.url=l}),await j(p,{firstname:e.firstname,lastname:e.lastname,email:e.email,phone:e.phone,enterDate:e.enterDate,diploma:e.diploma,image:e.url}).catch(l=>{s.value=l.message,o.value=0}),o.value=0,f.push({name:"admin.teacher.index"})},A=async e=>{n.value[e].value?u.value.push({id:n.value[e].id,image:n.value[e].image}):u.value.splice(e,1)},D=async(e=!0)=>{if(e)if(w.value)for(const t in n.value)n.value[t].value=!0,u.value.push(n.value[t].id);else{for(const t in n.value)n.value[t].value=!1;u.value=[]}else{for(const t in n.value)n.value[t].value=!1;u.value=[]}};return{updateTeacher:async e=>{o.value=1,s.value="";const t=g(h,"teachers",e);if(a.value.newImage){const l=v(m,a.value.image);await k(l).then(()=>{console.log("Deleted old file!")}).catch(c=>{s.value=c.message}),a.value.image=new File([a.value.newImage],`${new Date().getTime()}_${a.value.newImage.name}`);const i=v(m,`teacher/${a.value.image.name}`);await T(i,a.value.image).then(c=>{console.log("Uploaded a blob or file!")}),await y(`teacher/${a.value.image.name}`).then(c=>{a.value.url=c}),await $(t,{firstname:a.value.firstname,lastname:a.value.lastname,email:a.value.email,phone:a.value.phone,enterDate:a.value.enterDate,diploma:a.value.diploma,image:a.value.url}).catch(c=>{s.value=c.message})}else await $(t,{firstname:a.value.firstname,lastname:a.value.lastname,email:a.value.email,phone:a.value.phone,enterDate:a.value.enterDate,diploma:a.value.diploma}).catch(l=>{s.value=l.message});f.push({name:"admin.teacher.index"}),o.value=0},getTeacher:async e=>{o.value=1;const t=g(h,"teachers",e),l=await E(t);l.exists()?a.value=l.data():s.value="No such document!",o.value=0},teacher:a,deleteTeacher:async()=>{if(u.value.length!=0){const{reveal:e,onConfirm:t}=x(S,{question:"Are you sure you want to delete its item(s)? All data will be permanently deleted. This action cannot be undone."});t(async()=>{for(const l in u.value){const i=v(m,u.value[l].image);await k(i).then(()=>{console.log("Deleted file!")}).catch(c=>{s.value=c.message}),await C(g(h,"teachers",u.value[l].id)).catch(c=>{s.value=c.message})}b()}),e()}},toogleDeleteArray:A,checkAll:D,getTeachers:b,deleteArray:u,chks:n,chkAll:w,teachers:d,loading:o,errors:s,createTeacher:R,cleanErrors:()=>{s.value=""}}}export{N as u};
